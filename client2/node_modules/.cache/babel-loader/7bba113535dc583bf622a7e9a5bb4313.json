{"ast":null,"code":"var _jsxFileName = \"/home/adimall/development/docsclone/client/src/TextEditor.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useCallback, useState } from 'react';\nimport Quill from \"quill\";\nimport { io } from \"socket.io-client\";\nimport { useParams } from 'react-router';\nimport \"quill/dist/quill.snow.css\";\nimport \"./styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOOLBAR_OPTIONS = [[{\n  header: [1, 2, 3, 4, 5, 6, false]\n}], [{\n  font: []\n}], [{\n  list: \"ordered\"\n}, {\n  list: \"bullet\"\n}], [\"bold\", \"italic\", \"underline\"], [{\n  color: []\n}, {\n  background: []\n}], [{\n  script: \"sub\"\n}, {\n  script: \"super\"\n}], [{\n  align: []\n}], [\"image\", \"blockquote\", \"code-block\"], [\"clean\"]];\nexport default function TextEditor() {\n  _s();\n\n  const {\n    id: documentId\n  } = useParams();\n  const [socket, setSocket] = useState();\n  const [quill, setQuill] = useState();\n  useEffect(() => {\n    const s = io(\"http://localhost:3001\");\n    setSocket(s);\n    return () => {\n      s.disconnect();\n    };\n  }, []);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n    socket.once('load-document', document => {\n      quill.setContents(document);\n    });\n    socket.emit('get-document', documentId);\n  }, [socket, quill, documentId]);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = delta => {\n      quill.updateContents(delta);\n    };\n\n    socket.on('receive-changes', handler);\n    return () => {\n      socket.off('receive-changes', handler);\n    };\n  }, [socket, quill]);\n  useEffect(() => {\n    if (socket == null || quill == null) return;\n\n    const handler = (delta, oldDelta, source) => {\n      if (source !== 'user') return;\n      socket.emit(\"send-changes\", delta); //not the whole document, just the change\n    };\n\n    quill.on('text-change', handler);\n    return () => {\n      quill.off('text-change', handler);\n    };\n  }, [socket, quill]);\n  const wrapperRef = useCallback(wrapper => {\n    if (wrapper == null) return;\n    wrapper.innerHTML = \"\";\n    const editor = document.createElement('div');\n    wrapper.append(editor);\n    const q = new Quill(editor, {\n      theme: \"snow\",\n      modules: {\n        toolbar: TOOLBAR_OPTIONS\n      }\n    });\n    setQuill(q);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    ref: wrapperRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 12\n  }, this);\n}\n\n_s(TextEditor, \"5Hc5LDOKeMrq7Ejh8OGj5lL4gVk=\", false, function () {\n  return [useParams];\n});\n\n_c = TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"sources":["/home/adimall/development/docsclone/client/src/TextEditor.js"],"names":["React","useEffect","useRef","useCallback","useState","Quill","io","useParams","TOOLBAR_OPTIONS","header","font","list","color","background","script","align","TextEditor","id","documentId","socket","setSocket","quill","setQuill","s","disconnect","once","document","setContents","emit","handler","delta","updateContents","on","off","oldDelta","source","wrapperRef","wrapper","innerHTML","editor","createElement","append","q","theme","modules","toolbar"],"mappings":"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","sourcesContent":["import React, {useEffect, useRef, useCallback, useState} from 'react';\nimport Quill from \"quill\";\nimport {io} from \"socket.io-client\";\nimport { useParams } from 'react-router';\nimport \"quill/dist/quill.snow.css\";\nimport \"./styles.css\"\n\nconst TOOLBAR_OPTIONS = [\n    [{ header: [1, 2, 3, 4, 5, 6, false] }],\n  [{ font: [] }],\n  [{ list: \"ordered\" }, { list: \"bullet\" }],\n  [\"bold\", \"italic\", \"underline\"],\n  [{ color: [] }, { background: [] }],\n  [{ script: \"sub\" }, { script: \"super\" }],\n  [{ align: [] }],\n  [\"image\", \"blockquote\", \"code-block\"],\n  [\"clean\"]\n]\nexport default function TextEditor() {\n    const {id: documentId} = useParams()\n    const [socket, setSocket] = useState()\n    const [quill, setQuill] = useState()\n    useEffect(() => {\n        const s = io(\"http://localhost:3001\");\n        setSocket(s);\n        return () => {\n            s.disconnect()\n        }\n    }, [])\n\n    useEffect(() => {\n        if(socket == null || quill == null )return\n        socket.once('load-document', document => {\n            quill.setContents(document)\n        })\n        socket.emit('get-document', documentId) \n    }, [socket, quill, documentId])\n\n    useEffect(() => {\n        if(socket == null || quill == null)return\n        const handler = (delta) => {\n            quill.updateContents(delta)\n        }\n        socket.on('receive-changes', handler)\n\n        return () => {\n            socket.off('receive-changes', handler)\n        }\n    }, [socket, quill])\n\n    useEffect(() => {\n        if(socket == null || quill == null)return\n        const handler = (delta, oldDelta, source) => {\n            if(source !== 'user')return;\n            socket.emit(\"send-changes\", delta); //not the whole document, just the change\n        }\n        quill.on('text-change', handler)\n\n        return () => {\n            quill.off('text-change', handler)\n        }\n    }, [socket, quill])\n    const wrapperRef = useCallback((wrapper) => {\n        if(wrapper == null)return\n        wrapper.innerHTML = \"\"\n        const editor = document.createElement('div');\n        wrapper.append(editor)\n        const q = new Quill(editor, {theme : \"snow\", modules: {toolbar: TOOLBAR_OPTIONS}})\n        setQuill(q);\n        \n    }, [])\n\n    return <div className=\"container\" ref={wrapperRef}></div>\n}\n\n"]},"metadata":{},"sourceType":"module"}